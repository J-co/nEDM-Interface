{
  "_id" : "master_control",
  "type" : "control",
  "title" : "HeXe EDM Digitizer",
  "template" : "digitizer_control_template",
  "include_only_digitizers" : ["digitizer.2.nedm1"],
  "default_header_info" : {
              "full_scale": 20,
              "conversion_factor": 0.985e-9,
              "external_clock": True,
              "channel_names" : {
                        "0" : "SQUID_X1",
                        "1" : "SQUID_Y1",
                        "2" : "SQUID_Z1",
                        "3" : "SQUID_X2",
                        "4" : "SQUID_Y2",
                        "5" : "SQUID_Z2",
                        "6" : "Lockin_XE",
                        "7" : "Lockin_HE",
                        "8" : "CH9",
                        "9" : "CH10"
              },
              "measurement_type": "hexe_edm",
  },
  "ext_frequency" : 10000000,
  "view_channels" : [0,1,2,3,4,5,6,7],
  "save_channels" : [0,1,2,3,4,5,6,7,8,9],
  "defaults" : """
    function(thediv, docobj) {
      // Called when page loaded, we can modify the page, set defaults
      
      // Open FFT window and set log scale
      $('.fft_window', $(thediv)).collapsible("option", "collapsed", false);
      $('.log_scale', $(thediv)).prop("checked", true)
								.change()
								.checkboxradio("refresh");

      // Select the module
      $('.selectSaveModules',$(thediv)).filter(':input').val(1).change();
      $( ".upload_data,.save_data" ).prop( "checked", true )
                                    .change()
                                    .checkboxradio( "refresh" );

      // viewing channels
      var view_chan = $('.selectSlowControl', $(thediv)).filter(':input');
      // Saving channels
      var save_chan = $('.selectSaveChannels', $(thediv)).filter(':input');

      // Channel names
      var sel = $('.channel_show', $(thediv)).filter(':input');
      sel.empty();
      for (var k in docobj.default_header_info.channel_names) {
        var n = docobj.default_header_info.channel_names[k];
        view_chan.find('option[value="' + k + '"]').text(n);
        save_chan.find('option[value="' + k + '"]').text(n);
        sel.append($('<option/>').val(parseInt(k) + 1).text(n));
      }
      sel.selectmenu("refresh");

      for (var i=0;i<docobj.view_channels.length;i++) {
        view_chan.find('option[value="' + docobj.view_channels[i] + '"]').attr('selected', 'selected');
      }
      for (var i=0;i<docobj.save_channels.length;i++) {
        save_chan.find('option[value="' + docobj.save_channels[i] + '"]').attr('selected', 'selected');
      }
      view_chan.selectmenu("refresh", true);
      save_chan.selectmenu("refresh", true);


	  function adjustClkDiv(sampleFreq, refClock) {
		  var ext_clkdiv = refClock/settings.divide/(sampleFreq*1000);
		  x.sendObj({
			cmd: "setClkDiv",
			embed: true,
			args: {
				clkdiv : ext_clkdiv
			}
		  });
		  fftg.resize();
          ampg.resize();
          frqg.resize();
	  }


	  // Initialize ext. clock plus readjust sample freq/clock divider
      $('.external_freq', $(thediv)).val(docobj.ext_frequency);
	  $('.set_freq_ext', $(thediv)).prop("checked", false);
	  if (docobj.ext_frequency !==0 ) {
        $('.set_freq_ext', $(thediv)).trigger('click');
        adjustClkDiv(5.0, docobj.ext_frequency);
      }
      
      
      // Change layout
      var ext_clk_html = $('.frequency_set', $(thediv)).parent().parent();
      $('.external_freq', $(thediv)).parent().parent().hide();
//	  $('.set_freq_ext', $(thediv)).parent().hide();
	  $('.downsample', $(thediv)).parent().parent().hide();
	  ext_clk_html.append('<label><input class="new_ext_clk" type="checkbox">Use external clock</label>').trigger("create");
	  if ($('.set_freq_ext', $(thediv)).is(":checked")) {
		  $( ".new_ext_clk" ).prop( "checked", true )
                             .change()
                             .checkboxradio( "refresh" );
      }
      else {
		  $( ".new_ext_clk" ).prop( "checked", false )
                             .change()
                             .checkboxradio( "refresh" );
      }
      
      // When clicking ext. clock button: don't set value to 0, adjust sample freq
      $('.new_ext_clk', $(thediv)).on('click', function(ev) {
		  var is_checked = $(ev.currentTarget).is(":checked");
		  var sample_freq = parseFloat($('.frequency_set', $(thediv)).val());
		  var editor = hdr_editor.get();
		  if (is_checked) {
			  $('.external_freq', $(thediv)).val(docobj.ext_frequency);
		  }
		  $('.set_freq_ext', $(thediv)).trigger('click');
		  if (is_checked) {
			adjustClkDiv(sample_freq, docobj.ext_frequency);
			editor.external_clock = true;
		  } else {
			adjustClkDiv(sample_freq, settings.sysclk);
			editor.external_clock = false;
          }
          hdr_editor.set(editor);
	  });
		  
    }

"""
}
